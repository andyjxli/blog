{"version":3,"sources":["webpack:///./src/components/article/index.tsx","webpack:///./src/templates/list.tsx"],"names":["ArticleComponent","props","frontmatter","article","title","description","category","tags","date","path","className","styles","href","linkTo","name","dayjs","format","link","onClick","location","map","item","index","key","IndexPage","data","pageContext","tag","nodes","allMarkdownRemark","pageQuery"],"mappings":"+NA2CeA,EArCU,SAACC,GAAoC,IACpDC,EAAgBD,EAAME,QAAtBD,YACAE,EAAmDF,EAAnDE,MAAOC,EAA4CH,EAA5CG,YAAaC,EAA+BJ,EAA/BI,SAAUC,EAAqBL,EAArBK,KAAMC,EAAeN,EAAfM,KAAMC,EAASP,EAATO,KAElD,OACE,6BAASC,UAAWC,IAAOR,SACzB,gCACE,4BACE,uBAAGS,KAAMC,YAAO,IAAIP,EAASQ,KAAd,KAAsBL,GAAQL,KAAWA,IAE1D,+BACE,8BAAOW,IAAMP,GAAMQ,OAAO,eAC1B,0BACEN,UAAWC,IAAOM,KAClBC,QAAS,kBACNC,SAASP,KAAT,GAAmBC,YAAO,SAASP,EAASQ,QAG9CR,EAASF,OAEXG,GACCA,EAAKa,KAAI,SAACC,EAAMC,GAAP,OACP,0BACEC,IAAKD,EACLJ,QAAS,kBAAOC,SAASP,KAAT,GAAmBC,YAAO,SAASQ,IACnDX,UAAWC,IAAOM,MAEjBI,QAKX,2BAAIhB,KCtCV,0CAgCemB,UAfG,SAACvB,GAAqB,IAC9BwB,EAAsBxB,EAAtBwB,KAAMC,EAAgBzB,EAAhByB,YACNpB,EAAkBoB,EAAlBpB,SAAUqB,EAAQD,EAARC,IACVC,EAAUH,EAAKI,kBAAfD,MAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKxB,MAAOuB,GAAOrB,GAAY,OAC9BsB,EAAMR,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CAAkBE,IAAKF,EAAKnB,YAAYE,MAAOD,QAASkB,SAThE,IAiBaS,EAAY","file":"component---src-templates-list-tsx-2de827b91b98367894db.js","sourcesContent":["import { ArticleInfo } from '../../type/article'\nimport dayjs from 'dayjs'\nimport React from 'react'\nimport styles from './index.module.scss'\nimport { linkTo } from '../../utils/link'\n\nconst ArticleComponent = (props: { article: ArticleInfo }) => {\n  const { frontmatter } = props.article\n  const { title, description, category, tags, date, path } = frontmatter\n\n  return (\n    <article className={styles.article}>\n      <header>\n        <h3>\n          <a href={linkTo(`/${category.name}/${path || title}`)}>{title}</a>\n        </h3>\n        <small>\n          <span>{dayjs(date).format('YYYY-MM-DD')}</span>\n          <span\n            className={styles.link}\n            onClick={() =>\n              (location.href = `${linkTo(`/list/${category.name}`)}`)\n            }\n          >\n            {category.title}\n          </span>\n          {tags &&\n            tags.map((item, index) => (\n              <span\n                key={index}\n                onClick={() => (location.href = `${linkTo(`/list/${item}`)}`)}\n                className={styles.link}\n              >\n                {item}\n              </span>\n            ))}\n        </small>\n      </header>\n      <p>{description}</p>\n    </article>\n  )\n}\n\nexport default ArticleComponent\n","import React, { useState } from 'react'\n// import { Link } from \"gatsby\"\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { Article } from '../type/article'\nimport { graphql } from 'gatsby'\nimport ArticleComponent from '../components/article'\n\ninterface ListProps {\n  data: Article\n  pageContext: {\n    category: string\n    tag?: string\n  }\n}\n\nconst IndexPage = (props: ListProps) => {\n  const { data, pageContext } = props\n  const { category, tag } = pageContext\n  const { nodes } = data.allMarkdownRemark\n\n  return (\n    <Layout>\n      <SEO title={tag || category || '前端'} />\n      {nodes.map(item => (\n        <ArticleComponent key={item.frontmatter.title} article={item} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query blogPageQuery($category: [String], $tag: [String]) {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          category: { name: { in: $category } }\n          tags: { in: $tag }\n        }\n      }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        frontmatter {\n          category {\n            name\n            title\n          }\n          path\n          author\n          date\n          description\n          layout\n          tags\n          title\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}